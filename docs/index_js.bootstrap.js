"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["index_js"],{

/***/ "../pkg/lwk_wasm.js":
/*!**************************!*\
  !*** ../pkg/lwk_wasm.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Address: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Address),\n/* harmony export */   AddressResult: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.AddressResult),\n/* harmony export */   AssetId: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.AssetId),\n/* harmony export */   Chain: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Chain),\n/* harmony export */   Contract: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Contract),\n/* harmony export */   EsploraClient: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.EsploraClient),\n/* harmony export */   Jade: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Jade),\n/* harmony export */   Mnemonic: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Mnemonic),\n/* harmony export */   Network: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Network),\n/* harmony export */   OptionWalletTxOut: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.OptionWalletTxOut),\n/* harmony export */   OutPoint: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.OutPoint),\n/* harmony export */   Pset: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Pset),\n/* harmony export */   Script: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Script),\n/* harmony export */   Signer: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Signer),\n/* harmony export */   Transaction: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Transaction),\n/* harmony export */   TxOutSecrets: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.TxOutSecrets),\n/* harmony export */   Txid: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Txid),\n/* harmony export */   Update: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Update),\n/* harmony export */   WalletTx: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.WalletTx),\n/* harmony export */   WalletTxOut: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.WalletTxOut),\n/* harmony export */   Wollet: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.Wollet),\n/* harmony export */   WolletDescriptor: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.WolletDescriptor),\n/* harmony export */   __wbg_abort_2aa7521d5690750e: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_abort_2aa7521d5690750e),\n/* harmony export */   __wbg_append_7bfcb4937d1d5e29: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_append_7bfcb4937d1d5e29),\n/* harmony export */   __wbg_arrayBuffer_29931d52c7206b02: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_arrayBuffer_29931d52c7206b02),\n/* harmony export */   __wbg_buffer_12d079cc21e14bdb: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_buffer_12d079cc21e14bdb),\n/* harmony export */   __wbg_call_27c0f87801dedf93: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_call_27c0f87801dedf93),\n/* harmony export */   __wbg_call_b3ca7c6051f9bec1: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_call_b3ca7c6051f9bec1),\n/* harmony export */   __wbg_crypto_d05b68a3572bb8ca: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_crypto_d05b68a3572bb8ca),\n/* harmony export */   __wbg_done_298b57d23c0fc80c: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_done_298b57d23c0fc80c),\n/* harmony export */   __wbg_fetch_27eb4c0a08a9ca04: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_fetch_27eb4c0a08a9ca04),\n/* harmony export */   __wbg_fetch_921fad6ef9e883dd: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_fetch_921fad6ef9e883dd),\n/* harmony export */   __wbg_getRandomValues_7e42b4fb8779dc6d: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_getRandomValues_7e42b4fb8779dc6d),\n/* harmony export */   __wbg_getWriter_01ddb812f0418756: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_getWriter_01ddb812f0418756),\n/* harmony export */   __wbg_get_e3c254076557e348: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_e3c254076557e348),\n/* harmony export */   __wbg_globalThis_d1e6af4856ba331b: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_globalThis_d1e6af4856ba331b),\n/* harmony export */   __wbg_global_207b558942527489: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_global_207b558942527489),\n/* harmony export */   __wbg_has_0af94d20077affa2: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_has_0af94d20077affa2),\n/* harmony export */   __wbg_headers_9620bfada380764a: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_headers_9620bfada380764a),\n/* harmony export */   __wbg_instanceof_Response_849eb93e75734b6e: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_instanceof_Response_849eb93e75734b6e),\n/* harmony export */   __wbg_instanceof_SerialPort_4711c26beb3ff36f: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_instanceof_SerialPort_4711c26beb3ff36f),\n/* harmony export */   __wbg_instanceof_Window_f401953a2cf86220: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_instanceof_Window_f401953a2cf86220),\n/* harmony export */   __wbg_iterator_2cee6dadfd956dfa: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_iterator_2cee6dadfd956dfa),\n/* harmony export */   __wbg_jade_new: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_jade_new),\n/* harmony export */   __wbg_length_c20a40f15020d68a: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_length_c20a40f15020d68a),\n/* harmony export */   __wbg_msCrypto_10fc94afee92bd76: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_msCrypto_10fc94afee92bd76),\n/* harmony export */   __wbg_navigator_6c8fa55c5cc8796e: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_navigator_6c8fa55c5cc8796e),\n/* harmony export */   __wbg_new_0d76b0581eca6298: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_0d76b0581eca6298),\n/* harmony export */   __wbg_new_16b304a2cfa7ff4a: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_16b304a2cfa7ff4a),\n/* harmony export */   __wbg_new_63b92bc8671ed464: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_63b92bc8671ed464),\n/* harmony export */   __wbg_new_72fb9a18b5ae2624: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_72fb9a18b5ae2624),\n/* harmony export */   __wbg_new_81740750da40724f: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_81740750da40724f),\n/* harmony export */   __wbg_new_ab6fd82b10560829: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_ab6fd82b10560829),\n/* harmony export */   __wbg_new_cc5fa4553e5314c2: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_cc5fa4553e5314c2),\n/* harmony export */   __wbg_new_d9bc3a0147634640: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_d9bc3a0147634640),\n/* harmony export */   __wbg_newnoargs_e258087cd0daa0ea: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_newnoargs_e258087cd0daa0ea),\n/* harmony export */   __wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb),\n/* harmony export */   __wbg_newwithlength_e9b4878cebadb3d3: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_newwithlength_e9b4878cebadb3d3),\n/* harmony export */   __wbg_newwithstrandinit_3fd6fba4083ff2d0: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_newwithstrandinit_3fd6fba4083ff2d0),\n/* harmony export */   __wbg_next_196c84450b364254: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_next_196c84450b364254),\n/* harmony export */   __wbg_next_40fc327bfc8770e6: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_next_40fc327bfc8770e6),\n/* harmony export */   __wbg_node_43b1089f407e4ec2: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_node_43b1089f407e4ec2),\n/* harmony export */   __wbg_now_3014639a94423537: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_now_3014639a94423537),\n/* harmony export */   __wbg_open_0faccd6845713efc: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_open_0faccd6845713efc),\n/* harmony export */   __wbg_optionwallettxout_new: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_optionwallettxout_new),\n/* harmony export */   __wbg_process_b02b3570280d0366: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_process_b02b3570280d0366),\n/* harmony export */   __wbg_queueMicrotask_3cbae2ec6b6cd3d6: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_queueMicrotask_3cbae2ec6b6cd3d6),\n/* harmony export */   __wbg_queueMicrotask_481971b0d87f3dd4: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_queueMicrotask_481971b0d87f3dd4),\n/* harmony export */   __wbg_randomFillSync_b70ccbdf4926a99d: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_randomFillSync_b70ccbdf4926a99d),\n/* harmony export */   __wbg_read_e7d0f8a49be01d86: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_read_e7d0f8a49be01d86),\n/* harmony export */   __wbg_readable_d450070144f41318: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_readable_d450070144f41318),\n/* harmony export */   __wbg_requestPort_694281a2ba0420f2: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_requestPort_694281a2ba0420f2),\n/* harmony export */   __wbg_requestPort_ef4d540696cd7d15: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_requestPort_ef4d540696cd7d15),\n/* harmony export */   __wbg_require_9a7e0f667ead4995: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_require_9a7e0f667ead4995),\n/* harmony export */   __wbg_resolve_b0083a7967828ec8: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_resolve_b0083a7967828ec8),\n/* harmony export */   __wbg_self_ce0dbfc45cf2f5be: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_self_ce0dbfc45cf2f5be),\n/* harmony export */   __wbg_serial_0b3d5827cb31f45b: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_serial_0b3d5827cb31f45b),\n/* harmony export */   __wbg_setTimeout_c172d5704ef82276: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_setTimeout_c172d5704ef82276),\n/* harmony export */   __wbg_set_1f9b04f170055d33: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_1f9b04f170055d33),\n/* harmony export */   __wbg_set_8417257aaedc936b: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_8417257aaedc936b),\n/* harmony export */   __wbg_set_a47bac70306a19a7: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_a47bac70306a19a7),\n/* harmony export */   __wbg_set_d4638f722068f043: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_d4638f722068f043),\n/* harmony export */   __wbg_set_f975102236d3c502: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_f975102236d3c502),\n/* harmony export */   __wbg_set_wasm: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm),\n/* harmony export */   __wbg_signal_a61f78a3478fd9bc: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_signal_a61f78a3478fd9bc),\n/* harmony export */   __wbg_status_61a01141acd3cf74: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_status_61a01141acd3cf74),\n/* harmony export */   __wbg_stringify_8887fe74e1c50d81: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_stringify_8887fe74e1c50d81),\n/* harmony export */   __wbg_subarray_a1f73cd4b5b42fe1: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_subarray_a1f73cd4b5b42fe1),\n/* harmony export */   __wbg_text_450a059667fd91fd: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_text_450a059667fd91fd),\n/* harmony export */   __wbg_then_0c86a60e8fcfe9f6: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_then_0c86a60e8fcfe9f6),\n/* harmony export */   __wbg_then_a73caa9a87991566: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_then_a73caa9a87991566),\n/* harmony export */   __wbg_update_new: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_update_new),\n/* harmony export */   __wbg_url_5f6dc4009ac5f99d: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_url_5f6dc4009ac5f99d),\n/* harmony export */   __wbg_value_d93c65011f51a456: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_value_d93c65011f51a456),\n/* harmony export */   __wbg_versions_c1cb42213cedf0f5: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_versions_c1cb42213cedf0f5),\n/* harmony export */   __wbg_wallettx_new: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_wallettx_new),\n/* harmony export */   __wbg_window_c6fb939a7f436783: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_window_c6fb939a7f436783),\n/* harmony export */   __wbg_writable_2ba18afbbb570240: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_writable_2ba18afbbb570240),\n/* harmony export */   __wbg_write_0305cf168e5e805e: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_write_0305cf168e5e805e),\n/* harmony export */   __wbindgen_bigint_from_i64: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_bigint_from_i64),\n/* harmony export */   __wbindgen_bigint_from_u64: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_bigint_from_u64),\n/* harmony export */   __wbindgen_cb_drop: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_cb_drop),\n/* harmony export */   __wbindgen_closure_wrapper6285: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_closure_wrapper6285),\n/* harmony export */   __wbindgen_debug_string: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_debug_string),\n/* harmony export */   __wbindgen_error_new: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_error_new),\n/* harmony export */   __wbindgen_is_function: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_function),\n/* harmony export */   __wbindgen_is_object: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_object),\n/* harmony export */   __wbindgen_is_string: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_string),\n/* harmony export */   __wbindgen_is_undefined: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_undefined),\n/* harmony export */   __wbindgen_memory: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_memory),\n/* harmony export */   __wbindgen_number_new: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_number_new),\n/* harmony export */   __wbindgen_object_clone_ref: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_object_clone_ref),\n/* harmony export */   __wbindgen_object_drop_ref: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_object_drop_ref),\n/* harmony export */   __wbindgen_string_get: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_string_get),\n/* harmony export */   __wbindgen_string_new: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_string_new),\n/* harmony export */   __wbindgen_throw: () => (/* reexport safe */ _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw)\n/* harmony export */ });\n/* harmony import */ var _lwk_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lwk_wasm_bg.wasm */ \"../pkg/lwk_wasm_bg.wasm\");\n/* harmony import */ var _lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lwk_wasm_bg.js */ \"../pkg/lwk_wasm_bg.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lwk_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n_lwk_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n(0,_lwk_wasm_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm)(_lwk_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_1__);\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack:///../pkg/lwk_wasm.js?");

/***/ }),

/***/ "../pkg/lwk_wasm_bg.js":
/*!*****************************!*\
  !*** ../pkg/lwk_wasm_bg.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Address: () => (/* binding */ Address),\n/* harmony export */   AddressResult: () => (/* binding */ AddressResult),\n/* harmony export */   AssetId: () => (/* binding */ AssetId),\n/* harmony export */   Chain: () => (/* binding */ Chain),\n/* harmony export */   Contract: () => (/* binding */ Contract),\n/* harmony export */   EsploraClient: () => (/* binding */ EsploraClient),\n/* harmony export */   Jade: () => (/* binding */ Jade),\n/* harmony export */   Mnemonic: () => (/* binding */ Mnemonic),\n/* harmony export */   Network: () => (/* binding */ Network),\n/* harmony export */   OptionWalletTxOut: () => (/* binding */ OptionWalletTxOut),\n/* harmony export */   OutPoint: () => (/* binding */ OutPoint),\n/* harmony export */   Pset: () => (/* binding */ Pset),\n/* harmony export */   Script: () => (/* binding */ Script),\n/* harmony export */   Signer: () => (/* binding */ Signer),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   TxOutSecrets: () => (/* binding */ TxOutSecrets),\n/* harmony export */   Txid: () => (/* binding */ Txid),\n/* harmony export */   Update: () => (/* binding */ Update),\n/* harmony export */   WalletTx: () => (/* binding */ WalletTx),\n/* harmony export */   WalletTxOut: () => (/* binding */ WalletTxOut),\n/* harmony export */   Wollet: () => (/* binding */ Wollet),\n/* harmony export */   WolletDescriptor: () => (/* binding */ WolletDescriptor),\n/* harmony export */   __wbg_abort_2aa7521d5690750e: () => (/* binding */ __wbg_abort_2aa7521d5690750e),\n/* harmony export */   __wbg_append_7bfcb4937d1d5e29: () => (/* binding */ __wbg_append_7bfcb4937d1d5e29),\n/* harmony export */   __wbg_arrayBuffer_29931d52c7206b02: () => (/* binding */ __wbg_arrayBuffer_29931d52c7206b02),\n/* harmony export */   __wbg_buffer_12d079cc21e14bdb: () => (/* binding */ __wbg_buffer_12d079cc21e14bdb),\n/* harmony export */   __wbg_call_27c0f87801dedf93: () => (/* binding */ __wbg_call_27c0f87801dedf93),\n/* harmony export */   __wbg_call_b3ca7c6051f9bec1: () => (/* binding */ __wbg_call_b3ca7c6051f9bec1),\n/* harmony export */   __wbg_crypto_d05b68a3572bb8ca: () => (/* binding */ __wbg_crypto_d05b68a3572bb8ca),\n/* harmony export */   __wbg_done_298b57d23c0fc80c: () => (/* binding */ __wbg_done_298b57d23c0fc80c),\n/* harmony export */   __wbg_fetch_27eb4c0a08a9ca04: () => (/* binding */ __wbg_fetch_27eb4c0a08a9ca04),\n/* harmony export */   __wbg_fetch_921fad6ef9e883dd: () => (/* binding */ __wbg_fetch_921fad6ef9e883dd),\n/* harmony export */   __wbg_getRandomValues_7e42b4fb8779dc6d: () => (/* binding */ __wbg_getRandomValues_7e42b4fb8779dc6d),\n/* harmony export */   __wbg_getWriter_01ddb812f0418756: () => (/* binding */ __wbg_getWriter_01ddb812f0418756),\n/* harmony export */   __wbg_get_e3c254076557e348: () => (/* binding */ __wbg_get_e3c254076557e348),\n/* harmony export */   __wbg_globalThis_d1e6af4856ba331b: () => (/* binding */ __wbg_globalThis_d1e6af4856ba331b),\n/* harmony export */   __wbg_global_207b558942527489: () => (/* binding */ __wbg_global_207b558942527489),\n/* harmony export */   __wbg_has_0af94d20077affa2: () => (/* binding */ __wbg_has_0af94d20077affa2),\n/* harmony export */   __wbg_headers_9620bfada380764a: () => (/* binding */ __wbg_headers_9620bfada380764a),\n/* harmony export */   __wbg_instanceof_Response_849eb93e75734b6e: () => (/* binding */ __wbg_instanceof_Response_849eb93e75734b6e),\n/* harmony export */   __wbg_instanceof_SerialPort_4711c26beb3ff36f: () => (/* binding */ __wbg_instanceof_SerialPort_4711c26beb3ff36f),\n/* harmony export */   __wbg_instanceof_Window_f401953a2cf86220: () => (/* binding */ __wbg_instanceof_Window_f401953a2cf86220),\n/* harmony export */   __wbg_iterator_2cee6dadfd956dfa: () => (/* binding */ __wbg_iterator_2cee6dadfd956dfa),\n/* harmony export */   __wbg_jade_new: () => (/* binding */ __wbg_jade_new),\n/* harmony export */   __wbg_length_c20a40f15020d68a: () => (/* binding */ __wbg_length_c20a40f15020d68a),\n/* harmony export */   __wbg_msCrypto_10fc94afee92bd76: () => (/* binding */ __wbg_msCrypto_10fc94afee92bd76),\n/* harmony export */   __wbg_navigator_6c8fa55c5cc8796e: () => (/* binding */ __wbg_navigator_6c8fa55c5cc8796e),\n/* harmony export */   __wbg_new_0d76b0581eca6298: () => (/* binding */ __wbg_new_0d76b0581eca6298),\n/* harmony export */   __wbg_new_16b304a2cfa7ff4a: () => (/* binding */ __wbg_new_16b304a2cfa7ff4a),\n/* harmony export */   __wbg_new_63b92bc8671ed464: () => (/* binding */ __wbg_new_63b92bc8671ed464),\n/* harmony export */   __wbg_new_72fb9a18b5ae2624: () => (/* binding */ __wbg_new_72fb9a18b5ae2624),\n/* harmony export */   __wbg_new_81740750da40724f: () => (/* binding */ __wbg_new_81740750da40724f),\n/* harmony export */   __wbg_new_ab6fd82b10560829: () => (/* binding */ __wbg_new_ab6fd82b10560829),\n/* harmony export */   __wbg_new_cc5fa4553e5314c2: () => (/* binding */ __wbg_new_cc5fa4553e5314c2),\n/* harmony export */   __wbg_new_d9bc3a0147634640: () => (/* binding */ __wbg_new_d9bc3a0147634640),\n/* harmony export */   __wbg_newnoargs_e258087cd0daa0ea: () => (/* binding */ __wbg_newnoargs_e258087cd0daa0ea),\n/* harmony export */   __wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb: () => (/* binding */ __wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb),\n/* harmony export */   __wbg_newwithlength_e9b4878cebadb3d3: () => (/* binding */ __wbg_newwithlength_e9b4878cebadb3d3),\n/* harmony export */   __wbg_newwithstrandinit_3fd6fba4083ff2d0: () => (/* binding */ __wbg_newwithstrandinit_3fd6fba4083ff2d0),\n/* harmony export */   __wbg_next_196c84450b364254: () => (/* binding */ __wbg_next_196c84450b364254),\n/* harmony export */   __wbg_next_40fc327bfc8770e6: () => (/* binding */ __wbg_next_40fc327bfc8770e6),\n/* harmony export */   __wbg_node_43b1089f407e4ec2: () => (/* binding */ __wbg_node_43b1089f407e4ec2),\n/* harmony export */   __wbg_now_3014639a94423537: () => (/* binding */ __wbg_now_3014639a94423537),\n/* harmony export */   __wbg_open_0faccd6845713efc: () => (/* binding */ __wbg_open_0faccd6845713efc),\n/* harmony export */   __wbg_optionwallettxout_new: () => (/* binding */ __wbg_optionwallettxout_new),\n/* harmony export */   __wbg_process_b02b3570280d0366: () => (/* binding */ __wbg_process_b02b3570280d0366),\n/* harmony export */   __wbg_queueMicrotask_3cbae2ec6b6cd3d6: () => (/* binding */ __wbg_queueMicrotask_3cbae2ec6b6cd3d6),\n/* harmony export */   __wbg_queueMicrotask_481971b0d87f3dd4: () => (/* binding */ __wbg_queueMicrotask_481971b0d87f3dd4),\n/* harmony export */   __wbg_randomFillSync_b70ccbdf4926a99d: () => (/* binding */ __wbg_randomFillSync_b70ccbdf4926a99d),\n/* harmony export */   __wbg_read_e7d0f8a49be01d86: () => (/* binding */ __wbg_read_e7d0f8a49be01d86),\n/* harmony export */   __wbg_readable_d450070144f41318: () => (/* binding */ __wbg_readable_d450070144f41318),\n/* harmony export */   __wbg_requestPort_694281a2ba0420f2: () => (/* binding */ __wbg_requestPort_694281a2ba0420f2),\n/* harmony export */   __wbg_requestPort_ef4d540696cd7d15: () => (/* binding */ __wbg_requestPort_ef4d540696cd7d15),\n/* harmony export */   __wbg_require_9a7e0f667ead4995: () => (/* binding */ __wbg_require_9a7e0f667ead4995),\n/* harmony export */   __wbg_resolve_b0083a7967828ec8: () => (/* binding */ __wbg_resolve_b0083a7967828ec8),\n/* harmony export */   __wbg_self_ce0dbfc45cf2f5be: () => (/* binding */ __wbg_self_ce0dbfc45cf2f5be),\n/* harmony export */   __wbg_serial_0b3d5827cb31f45b: () => (/* binding */ __wbg_serial_0b3d5827cb31f45b),\n/* harmony export */   __wbg_setTimeout_c172d5704ef82276: () => (/* binding */ __wbg_setTimeout_c172d5704ef82276),\n/* harmony export */   __wbg_set_1f9b04f170055d33: () => (/* binding */ __wbg_set_1f9b04f170055d33),\n/* harmony export */   __wbg_set_8417257aaedc936b: () => (/* binding */ __wbg_set_8417257aaedc936b),\n/* harmony export */   __wbg_set_a47bac70306a19a7: () => (/* binding */ __wbg_set_a47bac70306a19a7),\n/* harmony export */   __wbg_set_d4638f722068f043: () => (/* binding */ __wbg_set_d4638f722068f043),\n/* harmony export */   __wbg_set_f975102236d3c502: () => (/* binding */ __wbg_set_f975102236d3c502),\n/* harmony export */   __wbg_set_wasm: () => (/* binding */ __wbg_set_wasm),\n/* harmony export */   __wbg_signal_a61f78a3478fd9bc: () => (/* binding */ __wbg_signal_a61f78a3478fd9bc),\n/* harmony export */   __wbg_status_61a01141acd3cf74: () => (/* binding */ __wbg_status_61a01141acd3cf74),\n/* harmony export */   __wbg_stringify_8887fe74e1c50d81: () => (/* binding */ __wbg_stringify_8887fe74e1c50d81),\n/* harmony export */   __wbg_subarray_a1f73cd4b5b42fe1: () => (/* binding */ __wbg_subarray_a1f73cd4b5b42fe1),\n/* harmony export */   __wbg_text_450a059667fd91fd: () => (/* binding */ __wbg_text_450a059667fd91fd),\n/* harmony export */   __wbg_then_0c86a60e8fcfe9f6: () => (/* binding */ __wbg_then_0c86a60e8fcfe9f6),\n/* harmony export */   __wbg_then_a73caa9a87991566: () => (/* binding */ __wbg_then_a73caa9a87991566),\n/* harmony export */   __wbg_update_new: () => (/* binding */ __wbg_update_new),\n/* harmony export */   __wbg_url_5f6dc4009ac5f99d: () => (/* binding */ __wbg_url_5f6dc4009ac5f99d),\n/* harmony export */   __wbg_value_d93c65011f51a456: () => (/* binding */ __wbg_value_d93c65011f51a456),\n/* harmony export */   __wbg_versions_c1cb42213cedf0f5: () => (/* binding */ __wbg_versions_c1cb42213cedf0f5),\n/* harmony export */   __wbg_wallettx_new: () => (/* binding */ __wbg_wallettx_new),\n/* harmony export */   __wbg_window_c6fb939a7f436783: () => (/* binding */ __wbg_window_c6fb939a7f436783),\n/* harmony export */   __wbg_writable_2ba18afbbb570240: () => (/* binding */ __wbg_writable_2ba18afbbb570240),\n/* harmony export */   __wbg_write_0305cf168e5e805e: () => (/* binding */ __wbg_write_0305cf168e5e805e),\n/* harmony export */   __wbindgen_bigint_from_i64: () => (/* binding */ __wbindgen_bigint_from_i64),\n/* harmony export */   __wbindgen_bigint_from_u64: () => (/* binding */ __wbindgen_bigint_from_u64),\n/* harmony export */   __wbindgen_cb_drop: () => (/* binding */ __wbindgen_cb_drop),\n/* harmony export */   __wbindgen_closure_wrapper6285: () => (/* binding */ __wbindgen_closure_wrapper6285),\n/* harmony export */   __wbindgen_debug_string: () => (/* binding */ __wbindgen_debug_string),\n/* harmony export */   __wbindgen_error_new: () => (/* binding */ __wbindgen_error_new),\n/* harmony export */   __wbindgen_is_function: () => (/* binding */ __wbindgen_is_function),\n/* harmony export */   __wbindgen_is_object: () => (/* binding */ __wbindgen_is_object),\n/* harmony export */   __wbindgen_is_string: () => (/* binding */ __wbindgen_is_string),\n/* harmony export */   __wbindgen_is_undefined: () => (/* binding */ __wbindgen_is_undefined),\n/* harmony export */   __wbindgen_memory: () => (/* binding */ __wbindgen_memory),\n/* harmony export */   __wbindgen_number_new: () => (/* binding */ __wbindgen_number_new),\n/* harmony export */   __wbindgen_object_clone_ref: () => (/* binding */ __wbindgen_object_clone_ref),\n/* harmony export */   __wbindgen_object_drop_ref: () => (/* binding */ __wbindgen_object_drop_ref),\n/* harmony export */   __wbindgen_string_get: () => (/* binding */ __wbindgen_string_get),\n/* harmony export */   __wbindgen_string_new: () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   __wbindgen_throw: () => (/* binding */ __wbindgen_throw)\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(state => {\n    wasm.__wbindgen_export_2.get(state.dtor)(state.a, state.b)\n});\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\nfunction __wbg_adapter_34(arg0, arg1, arg2) {\n    wasm.wasm_bindgen__convert__closures__invoke1_mut__h9fbc941409cefae4(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\nfunction __wbg_adapter_230(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h6168625b7a7e1095(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n* Wallet chain\n*/\nconst Chain = Object.freeze({\n/**\n* External address, shown when asked for a payment.\n* Wallet having a single descriptor are considered External\n*/\nExternal:0,\"0\":\"External\",\n/**\n* Internal address, used for the change\n*/\nInternal:1,\"1\":\"Internal\", });\n\nconst AddressFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_address_free(ptr >>> 0));\n/**\n*/\nclass Address {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Address.prototype);\n        obj.__wbg_ptr = ptr;\n        AddressFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        AddressFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_address_free(ptr);\n    }\n    /**\n    * Creates an `Address`\n    * @param {string} s\n    */\n    constructor(s) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.address_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Script}\n    */\n    scriptPubkey() {\n        const ret = wasm.address_scriptPubkey(this.__wbg_ptr);\n        return Script.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    isBlinded() {\n        const ret = wasm.address_isBlinded(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {Address}\n    */\n    toUnconfidential() {\n        const ret = wasm.address_toUnconfidential(this.__wbg_ptr);\n        return Address.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.address_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst AddressResultFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_addressresult_free(ptr >>> 0));\n/**\n*/\nclass AddressResult {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(AddressResult.prototype);\n        obj.__wbg_ptr = ptr;\n        AddressResultFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        AddressResultFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_addressresult_free(ptr);\n    }\n    /**\n    * @returns {Address}\n    */\n    address() {\n        const ret = wasm.addressresult_address(this.__wbg_ptr);\n        return Address.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    index() {\n        const ret = wasm.addressresult_index(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n\nconst AssetIdFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_assetid_free(ptr >>> 0));\n/**\n* A valid asset identifier.\n*\n* 32 bytes encoded as hex string.\n*/\nclass AssetId {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(AssetId.prototype);\n        obj.__wbg_ptr = ptr;\n        AssetIdFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        AssetIdFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_assetid_free(ptr);\n    }\n    /**\n    * Creates an `AssetId`\n    * @param {string} asset_id\n    */\n    constructor(asset_id) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(asset_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.assetid_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.assetid_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst ContractFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_contract_free(ptr >>> 0));\n/**\n*/\nclass Contract {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ContractFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_contract_free(ptr);\n    }\n    /**\n    * Creates a `Contract`\n    * @param {string} domain\n    * @param {string} issuer_pubkey\n    * @param {string} name\n    * @param {number} precision\n    * @param {string} ticker\n    * @param {number} version\n    */\n    constructor(domain, issuer_pubkey, name, precision, ticker, version) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(domain, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            const ptr1 = passStringToWasm0(issuer_pubkey, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len1 = WASM_VECTOR_LEN;\n            const ptr2 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len2 = WASM_VECTOR_LEN;\n            const ptr3 = passStringToWasm0(ticker, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len3 = WASM_VECTOR_LEN;\n            wasm.contract_new(retptr, ptr0, len0, ptr1, len1, ptr2, len2, precision, ptr3, len3, version);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.contract_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst EsploraClientFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_esploraclient_free(ptr >>> 0));\n/**\n*/\nclass EsploraClient {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(EsploraClient.prototype);\n        obj.__wbg_ptr = ptr;\n        EsploraClientFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        EsploraClientFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_esploraclient_free(ptr);\n    }\n    /**\n    * Creates an `EsploraClient`\n    * @param {string} url\n    */\n    constructor(url) {\n        const ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.esploraclient_new(ptr0, len0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {Wollet} wollet\n    * @returns {Promise<Update | undefined>}\n    */\n    fullScan(wollet) {\n        _assertClass(wollet, Wollet);\n        const ret = wasm.esploraclient_fullScan(this.__wbg_ptr, wollet.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nconst JadeFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_jade_free(ptr >>> 0));\n/**\n*/\nclass Jade {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Jade.prototype);\n        obj.__wbg_ptr = ptr;\n        JadeFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        JadeFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_jade_free(ptr);\n    }\n    /**\n    * Creates a Jade from Web Serial for the given network\n    *\n    * When filter is true, it will filter available serial with Blockstream released chips, use\n    * false if you don't see your DYI jade\n    * @param {Network} network\n    * @param {boolean} filter\n    */\n    constructor(network, filter) {\n        _assertClass(network, Network);\n        var ptr0 = network.__destroy_into_raw();\n        const ret = wasm.jade_from_serial(ptr0, filter);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Promise<any>}\n    */\n    getVersion() {\n        const ret = wasm.jade_getVersion(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Promise<string>}\n    */\n    getMasterXpub() {\n        const ret = wasm.jade_getMasterXpub(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nconst MnemonicFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_mnemonic_free(ptr >>> 0));\n/**\n*/\nclass Mnemonic {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        MnemonicFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_mnemonic_free(ptr);\n    }\n    /**\n    * Creates a Mnemonic\n    * @param {string} s\n    */\n    constructor(s) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.mnemonic_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.mnemonic_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst NetworkFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_network_free(ptr >>> 0));\n/**\n*/\nclass Network {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Network.prototype);\n        obj.__wbg_ptr = ptr;\n        NetworkFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        NetworkFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_network_free(ptr);\n    }\n    /**\n    * Creates a mainnet `Network``\n    * @returns {Network}\n    */\n    static mainnet() {\n        const ret = wasm.network_mainnet();\n        return Network.__wrap(ret);\n    }\n    /**\n    * Creates a testnet `Network``\n    * @returns {Network}\n    */\n    static testnet() {\n        const ret = wasm.network_testnet();\n        return Network.__wrap(ret);\n    }\n    /**\n    * Creates a regtest `Network``\n    * @param {AssetId} policy_asset\n    * @returns {Network}\n    */\n    static regtest(policy_asset) {\n        _assertClass(policy_asset, AssetId);\n        const ret = wasm.network_regtest(policy_asset.__wbg_ptr);\n        return Network.__wrap(ret);\n    }\n    /**\n    * Creates the default regtest `Network`\n    * @returns {Network}\n    */\n    static regtestDefault() {\n        const ret = wasm.network_regtestDefault();\n        return Network.__wrap(ret);\n    }\n    /**\n    * @returns {EsploraClient}\n    */\n    defaultEsploraClient() {\n        const ret = wasm.network_defaultEsploraClient(this.__wbg_ptr);\n        return EsploraClient.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    isMainnet() {\n        const ret = wasm.network_isMainnet(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.network_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {AssetId}\n    */\n    policyAsset() {\n        const ret = wasm.network_policyAsset(this.__wbg_ptr);\n        return AssetId.__wrap(ret);\n    }\n}\n\nconst OptionWalletTxOutFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_optionwallettxout_free(ptr >>> 0));\n/**\n* An optional wallet transaction output. Could be None when it's not possible to unblind.\n* It seems required by wasm_bindgen because we can't return `Vec<Option<WalletTxOut>>`\n*/\nclass OptionWalletTxOut {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(OptionWalletTxOut.prototype);\n        obj.__wbg_ptr = ptr;\n        OptionWalletTxOutFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        OptionWalletTxOutFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_optionwallettxout_free(ptr);\n    }\n    /**\n    * @returns {WalletTxOut | undefined}\n    */\n    get() {\n        const ret = wasm.optionwallettxout_get(this.__wbg_ptr);\n        return ret === 0 ? undefined : WalletTxOut.__wrap(ret);\n    }\n}\n\nconst OutPointFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_outpoint_free(ptr >>> 0));\n/**\n*/\nclass OutPoint {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(OutPoint.prototype);\n        obj.__wbg_ptr = ptr;\n        OutPointFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        OutPointFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_outpoint_free(ptr);\n    }\n    /**\n    * Creates an `OutPoint`\n    * @param {string} s\n    */\n    constructor(s) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.outpoint_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Txid}\n    */\n    txid() {\n        const ret = wasm.outpoint_txid(this.__wbg_ptr);\n        return Txid.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    vout() {\n        const ret = wasm.outpoint_vout(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n\nconst PsetFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_pset_free(ptr >>> 0));\n/**\n* Partially Signed Elements Transaction\n*/\nclass Pset {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Pset.prototype);\n        obj.__wbg_ptr = ptr;\n        PsetFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        PsetFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pset_free(ptr);\n    }\n    /**\n    * Creates a `Pset`\n    * @param {string} base64\n    */\n    constructor(base64) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(base64, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.pset_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Transaction}\n    */\n    extractTx() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pset_extractTx(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Transaction.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} index\n    * @returns {AssetId | undefined}\n    */\n    issuanceAsset(index) {\n        const ret = wasm.pset_issuanceAsset(this.__wbg_ptr, index);\n        return ret === 0 ? undefined : AssetId.__wrap(ret);\n    }\n    /**\n    * @param {number} index\n    * @returns {AssetId | undefined}\n    */\n    issuanceToken(index) {\n        const ret = wasm.pset_issuanceToken(this.__wbg_ptr, index);\n        return ret === 0 ? undefined : AssetId.__wrap(ret);\n    }\n}\n\nconst ScriptFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_script_free(ptr >>> 0));\n/**\n*/\nclass Script {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Script.prototype);\n        obj.__wbg_ptr = ptr;\n        ScriptFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ScriptFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_script_free(ptr);\n    }\n    /**\n    * Creates a `Script`\n    * @param {string} s\n    */\n    constructor(s) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.script_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.script_bytes(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    asm() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.script_asm(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.script_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst SignerFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_signer_free(ptr >>> 0));\n/**\n* A Software signer\n*/\nclass Signer {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        SignerFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_signer_free(ptr);\n    }\n    /**\n    * Creates a `Signer`\n    * @param {Mnemonic} mnemonic\n    * @param {Network} network\n    */\n    constructor(mnemonic, network) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(mnemonic, Mnemonic);\n            _assertClass(network, Network);\n            wasm.signer_new(retptr, mnemonic.__wbg_ptr, network.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Sign and consume the given PSET, returning the signed one\n    * @param {Pset} pset\n    * @returns {Pset}\n    */\n    sign(pset) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(pset, Pset);\n            var ptr0 = pset.__destroy_into_raw();\n            wasm.signer_sign(retptr, this.__wbg_ptr, ptr0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pset.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {WolletDescriptor}\n    */\n    wpkhSlip77Descriptor() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signer_wpkhSlip77Descriptor(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WolletDescriptor.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nconst TransactionFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_transaction_free(ptr >>> 0));\n/**\n* A Liquid transaction\n*/\nclass Transaction {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Transaction.prototype);\n        obj.__wbg_ptr = ptr;\n        TransactionFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        TransactionFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transaction_free(ptr);\n    }\n    /**\n    * Creates a `Transaction`\n    * @param {string} tx_hex\n    */\n    constructor(tx_hex) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(tx_hex, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.transaction_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Txid}\n    */\n    txid() {\n        const ret = wasm.transaction_txid(this.__wbg_ptr);\n        return Txid.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    bytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_bytes(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {AssetId} policy_asset\n    * @returns {bigint}\n    */\n    fee(policy_asset) {\n        _assertClass(policy_asset, AssetId);\n        const ret = wasm.transaction_fee(this.__wbg_ptr, policy_asset.__wbg_ptr);\n        return BigInt.asUintN(64, ret);\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst TxOutSecretsFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_txoutsecrets_free(ptr >>> 0));\n/**\n*/\nclass TxOutSecrets {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(TxOutSecrets.prototype);\n        obj.__wbg_ptr = ptr;\n        TxOutSecretsFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        TxOutSecretsFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_txoutsecrets_free(ptr);\n    }\n    /**\n    * @returns {AssetId}\n    */\n    asset() {\n        const ret = wasm.txoutsecrets_asset(this.__wbg_ptr);\n        return AssetId.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    assetBlindingFactor() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.txoutsecrets_assetBlindingFactor(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {bigint}\n    */\n    value() {\n        const ret = wasm.txoutsecrets_value(this.__wbg_ptr);\n        return BigInt.asUintN(64, ret);\n    }\n    /**\n    * @returns {string}\n    */\n    valueBlindingFactor() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.txoutsecrets_valueBlindingFactor(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst TxidFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_txid_free(ptr >>> 0));\n/**\n* A valid transaction identifier.\n*\n* 32 bytes encoded as hex string.\n*/\nclass Txid {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Txid.prototype);\n        obj.__wbg_ptr = ptr;\n        TxidFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        TxidFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_txid_free(ptr);\n    }\n    /**\n    * Creates a `Txid`\n    * @param {string} tx_id\n    */\n    constructor(tx_id) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(tx_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.txid_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.txid_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nconst UpdateFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_update_free(ptr >>> 0));\n/**\n*/\nclass Update {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Update.prototype);\n        obj.__wbg_ptr = ptr;\n        UpdateFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        UpdateFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_update_free(ptr);\n    }\n    /**\n    * Creates an `Update`\n    * @param {Uint8Array} bytes\n    */\n    constructor(bytes) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.update_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    serialize() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.update_serialize(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nconst WalletTxFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wallettx_free(ptr >>> 0));\n/**\n*/\nclass WalletTx {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WalletTx.prototype);\n        obj.__wbg_ptr = ptr;\n        WalletTxFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WalletTxFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wallettx_free(ptr);\n    }\n    /**\n    * @returns {Transaction}\n    */\n    tx() {\n        const ret = wasm.wallettx_tx(this.__wbg_ptr);\n        return Transaction.__wrap(ret);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    height() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wallettx_height(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    balance() {\n        const ret = wasm.wallettx_balance(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Txid}\n    */\n    txid() {\n        const ret = wasm.wallettx_txid(this.__wbg_ptr);\n        return Txid.__wrap(ret);\n    }\n    /**\n    * @returns {bigint}\n    */\n    fee() {\n        const ret = wasm.wallettx_fee(this.__wbg_ptr);\n        return BigInt.asUintN(64, ret);\n    }\n    /**\n    * @returns {string}\n    */\n    txType() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wallettx_txType(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    timestamp() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wallettx_timestamp(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {(OptionWalletTxOut)[]}\n    */\n    inputs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wallettx_inputs(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4, 4);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {(OptionWalletTxOut)[]}\n    */\n    outputs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wallettx_outputs(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4, 4);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} explorer_url\n    * @returns {string}\n    */\n    unblindedUrl(explorer_url) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(explorer_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wallettx_unblindedUrl(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred2_0 = r0;\n            deferred2_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n}\n\nconst WalletTxOutFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wallettxout_free(ptr >>> 0));\n/**\n*/\nclass WalletTxOut {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WalletTxOut.prototype);\n        obj.__wbg_ptr = ptr;\n        WalletTxOutFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WalletTxOutFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wallettxout_free(ptr);\n    }\n    /**\n    * @returns {OutPoint}\n    */\n    outpoint() {\n        const ret = wasm.wallettxout_outpoint(this.__wbg_ptr);\n        return OutPoint.__wrap(ret);\n    }\n    /**\n    * @returns {Script}\n    */\n    scriptPubkey() {\n        const ret = wasm.wallettxout_scriptPubkey(this.__wbg_ptr);\n        return Script.__wrap(ret);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    height() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wallettxout_height(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {TxOutSecrets}\n    */\n    unblinded() {\n        const ret = wasm.wallettxout_unblinded(this.__wbg_ptr);\n        return TxOutSecrets.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    wildcardIndex() {\n        const ret = wasm.wallettxout_wildcardIndex(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Chain}\n    */\n    extInt() {\n        const ret = wasm.wallettxout_extInt(this.__wbg_ptr);\n        return ret;\n    }\n}\n\nconst WolletFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wollet_free(ptr >>> 0));\n/**\n*/\nclass Wollet {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WolletFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wollet_free(ptr);\n    }\n    /**\n    * Create a `Wollet`\n    * @param {Network} network\n    * @param {WolletDescriptor} descriptor\n    */\n    constructor(network, descriptor) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(network, Network);\n            _assertClass(descriptor, WolletDescriptor);\n            wasm.wollet_new(retptr, network.__wbg_ptr, descriptor.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get a wallet address with the correspondong derivation index\n    *\n    * If Some return the address at the given index,\n    * otherwise the last unused address.\n    * @param {number | undefined} [index]\n    * @returns {AddressResult}\n    */\n    address(index) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wollet_address(retptr, this.__wbg_ptr, !isLikeNone(index), isLikeNone(index) ? 0 : index);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return AddressResult.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Update} update\n    */\n    applyUpdate(update) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(update, Update);\n            wasm.wollet_applyUpdate(retptr, this.__wbg_ptr, update.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    balance() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wollet_balance(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {(WalletTx)[]}\n    */\n    transactions() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wollet_transactions(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4, 4);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {bigint} satoshis\n    * @param {Address} out_address\n    * @param {number} fee_rate\n    * @returns {Pset}\n    */\n    sendLbtc(satoshis, out_address, fee_rate) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(out_address, Address);\n            wasm.wollet_sendLbtc(retptr, this.__wbg_ptr, satoshis, out_address.__wbg_ptr, fee_rate);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pset.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {bigint} satoshis\n    * @param {Address} out_address\n    * @param {AssetId} asset\n    * @param {number} fee_rate\n    * @returns {Pset}\n    */\n    sendAsset(satoshis, out_address, asset, fee_rate) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(out_address, Address);\n            _assertClass(asset, AssetId);\n            wasm.wollet_sendAsset(retptr, this.__wbg_ptr, satoshis, out_address.__wbg_ptr, asset.__wbg_ptr, fee_rate);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pset.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {bigint} satoshi_asset\n    * @param {Address} address_asset\n    * @param {bigint} satoshi_token\n    * @param {Address} address_token\n    * @param {Contract} contract\n    * @param {number} fee_rate\n    * @returns {Pset}\n    */\n    issueAsset(satoshi_asset, address_asset, satoshi_token, address_token, contract, fee_rate) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(address_asset, Address);\n            _assertClass(address_token, Address);\n            _assertClass(contract, Contract);\n            wasm.wollet_issueAsset(retptr, this.__wbg_ptr, satoshi_asset, address_asset.__wbg_ptr, satoshi_token, address_token.__wbg_ptr, contract.__wbg_ptr, fee_rate);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pset.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Finalize and consume the given PSET, returning the finalized one\n    * @param {Pset} pset\n    * @returns {Pset}\n    */\n    finalize(pset) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(pset, Pset);\n            var ptr0 = pset.__destroy_into_raw();\n            wasm.wollet_finalize(retptr, this.__wbg_ptr, ptr0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pset.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nconst WolletDescriptorFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wolletdescriptor_free(ptr >>> 0));\n/**\n*/\nclass WolletDescriptor {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WolletDescriptor.prototype);\n        obj.__wbg_ptr = ptr;\n        WolletDescriptorFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WolletDescriptorFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wolletdescriptor_free(ptr);\n    }\n    /**\n    * Creates a `WolletDescriptor`\n    * @param {string} descriptor\n    */\n    constructor(descriptor) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(descriptor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wolletdescriptor_new(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    toString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wolletdescriptor_toString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nfunction __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_is_undefined(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbindgen_string_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nfunction __wbindgen_error_new(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_wallettx_new(arg0) {\n    const ret = WalletTx.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_number_new(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_optionwallettxout_new(arg0) {\n    const ret = OptionWalletTxOut.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_jade_new(arg0) {\n    const ret = Jade.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_update_new(arg0) {\n    const ret = Update.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_object_clone_ref(arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_is_object(arg0) {\n    const val = getObject(arg0);\n    const ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nfunction __wbindgen_bigint_from_i64(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_bigint_from_u64(arg0) {\n    const ret = BigInt.asUintN(64, arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_set_f975102236d3c502(arg0, arg1, arg2) {\n    getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n};\n\nfunction __wbindgen_cb_drop(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    const ret = false;\n    return ret;\n};\n\nfunction __wbg_fetch_27eb4c0a08a9ca04(arg0) {\n    const ret = fetch(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_queueMicrotask_3cbae2ec6b6cd3d6(arg0) {\n    const ret = getObject(arg0).queueMicrotask;\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_is_function(arg0) {\n    const ret = typeof(getObject(arg0)) === 'function';\n    return ret;\n};\n\nfunction __wbg_queueMicrotask_481971b0d87f3dd4(arg0) {\n    queueMicrotask(getObject(arg0));\n};\n\nfunction __wbg_instanceof_Window_f401953a2cf86220(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Window;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nfunction __wbg_navigator_6c8fa55c5cc8796e(arg0) {\n    const ret = getObject(arg0).navigator;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_setTimeout_c172d5704ef82276() { return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).setTimeout(getObject(arg1), arg2);\n    return ret;\n}, arguments) };\n\nfunction __wbg_fetch_921fad6ef9e883dd(arg0, arg1) {\n    const ret = getObject(arg0).fetch(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_signal_a61f78a3478fd9bc(arg0) {\n    const ret = getObject(arg0).signal;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_new_0d76b0581eca6298() { return handleError(function () {\n    const ret = new AbortController();\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_abort_2aa7521d5690750e(arg0) {\n    getObject(arg0).abort();\n};\n\nfunction __wbg_newwithstrandinit_3fd6fba4083ff2d0() { return handleError(function (arg0, arg1, arg2) {\n    const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_instanceof_Response_849eb93e75734b6e(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Response;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nfunction __wbg_url_5f6dc4009ac5f99d(arg0, arg1) {\n    const ret = getObject(arg1).url;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nfunction __wbg_status_61a01141acd3cf74(arg0) {\n    const ret = getObject(arg0).status;\n    return ret;\n};\n\nfunction __wbg_headers_9620bfada380764a(arg0) {\n    const ret = getObject(arg0).headers;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_arrayBuffer_29931d52c7206b02() { return handleError(function (arg0) {\n    const ret = getObject(arg0).arrayBuffer();\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_text_450a059667fd91fd() { return handleError(function (arg0) {\n    const ret = getObject(arg0).text();\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_new_ab6fd82b10560829() { return handleError(function () {\n    const ret = new Headers();\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_append_7bfcb4937d1d5e29() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n}, arguments) };\n\nfunction __wbg_serial_0b3d5827cb31f45b(arg0) {\n    const ret = getObject(arg0).serial;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_new_cc5fa4553e5314c2() { return handleError(function (arg0) {\n    const ret = new ReadableStreamDefaultReader(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_read_e7d0f8a49be01d86(arg0) {\n    const ret = getObject(arg0).read();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_requestPort_ef4d540696cd7d15(arg0) {\n    const ret = getObject(arg0).requestPort();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_requestPort_694281a2ba0420f2(arg0, arg1) {\n    const ret = getObject(arg0).requestPort(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_instanceof_SerialPort_4711c26beb3ff36f(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof SerialPort;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nfunction __wbg_readable_d450070144f41318(arg0) {\n    const ret = getObject(arg0).readable;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_writable_2ba18afbbb570240(arg0) {\n    const ret = getObject(arg0).writable;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_open_0faccd6845713efc(arg0, arg1) {\n    const ret = getObject(arg0).open(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_getWriter_01ddb812f0418756() { return handleError(function (arg0) {\n    const ret = getObject(arg0).getWriter();\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_write_0305cf168e5e805e(arg0, arg1) {\n    const ret = getObject(arg0).write(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_crypto_d05b68a3572bb8ca(arg0) {\n    const ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_process_b02b3570280d0366(arg0) {\n    const ret = getObject(arg0).process;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_versions_c1cb42213cedf0f5(arg0) {\n    const ret = getObject(arg0).versions;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_node_43b1089f407e4ec2(arg0) {\n    const ret = getObject(arg0).node;\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_is_string(arg0) {\n    const ret = typeof(getObject(arg0)) === 'string';\n    return ret;\n};\n\nfunction __wbg_require_9a7e0f667ead4995() { return handleError(function () {\n    const ret = module.require;\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_msCrypto_10fc94afee92bd76(arg0) {\n    const ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_randomFillSync_b70ccbdf4926a99d() { return handleError(function (arg0, arg1) {\n    getObject(arg0).randomFillSync(takeObject(arg1));\n}, arguments) };\n\nfunction __wbg_getRandomValues_7e42b4fb8779dc6d() { return handleError(function (arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n}, arguments) };\n\nfunction __wbg_new_16b304a2cfa7ff4a() {\n    const ret = new Array();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_newnoargs_e258087cd0daa0ea(arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_new_d9bc3a0147634640() {\n    const ret = new Map();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_next_40fc327bfc8770e6(arg0) {\n    const ret = getObject(arg0).next;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_value_d93c65011f51a456(arg0) {\n    const ret = getObject(arg0).value;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_iterator_2cee6dadfd956dfa() {\n    const ret = Symbol.iterator;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_new_72fb9a18b5ae2624() {\n    const ret = new Object();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_self_ce0dbfc45cf2f5be() { return handleError(function () {\n    const ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_window_c6fb939a7f436783() { return handleError(function () {\n    const ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_globalThis_d1e6af4856ba331b() { return handleError(function () {\n    const ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_global_207b558942527489() { return handleError(function () {\n    const ret = __webpack_require__.g.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_set_d4638f722068f043(arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n};\n\nfunction __wbg_call_27c0f87801dedf93() { return handleError(function (arg0, arg1) {\n    const ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_call_b3ca7c6051f9bec1() { return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_set_8417257aaedc936b(arg0, arg1, arg2) {\n    const ret = getObject(arg0).set(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_next_196c84450b364254() { return handleError(function (arg0) {\n    const ret = getObject(arg0).next();\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_done_298b57d23c0fc80c(arg0) {\n    const ret = getObject(arg0).done;\n    return ret;\n};\n\nfunction __wbg_now_3014639a94423537() {\n    const ret = Date.now();\n    return ret;\n};\n\nfunction __wbg_new_81740750da40724f(arg0, arg1) {\n    try {\n        var state0 = {a: arg0, b: arg1};\n        var cb0 = (arg0, arg1) => {\n            const a = state0.a;\n            state0.a = 0;\n            try {\n                return __wbg_adapter_230(a, state0.b, arg0, arg1);\n            } finally {\n                state0.a = a;\n            }\n        };\n        const ret = new Promise(cb0);\n        return addHeapObject(ret);\n    } finally {\n        state0.a = state0.b = 0;\n    }\n};\n\nfunction __wbg_resolve_b0083a7967828ec8(arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_then_0c86a60e8fcfe9f6(arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_then_a73caa9a87991566(arg0, arg1, arg2) {\n    const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_buffer_12d079cc21e14bdb(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nfunction __wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb(arg0, arg1, arg2) {\n    const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_new_63b92bc8671ed464(arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_newwithlength_e9b4878cebadb3d3(arg0) {\n    const ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_subarray_a1f73cd4b5b42fe1(arg0, arg1, arg2) {\n    const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_length_c20a40f15020d68a(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n};\n\nfunction __wbg_set_a47bac70306a19a7(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nfunction __wbg_get_e3c254076557e348() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.get(getObject(arg0), getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbg_has_0af94d20077affa2() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.has(getObject(arg0), getObject(arg1));\n    return ret;\n}, arguments) };\n\nfunction __wbg_set_1f9b04f170055d33() { return handleError(function (arg0, arg1, arg2) {\n    const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n    return ret;\n}, arguments) };\n\nfunction __wbg_stringify_8887fe74e1c50d81() { return handleError(function (arg0) {\n    const ret = JSON.stringify(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nfunction __wbindgen_memory() {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_closure_wrapper6285(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 783, __wbg_adapter_34);\n    return addHeapObject(ret);\n};\n\n\n\n//# sourceURL=webpack:///../pkg/lwk_wasm_bg.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lwk_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwk_wasm */ \"../pkg/lwk_wasm.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([lwk_wasm__WEBPACK_IMPORTED_MODULE_0__]);\nlwk_wasm__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst balance = document.getElementById(\"balance\")\nconst scanButton = document.getElementById(\"scan-button\")\nconst jadeButton = document.getElementById(\"jade-button\")\nconst jadeText = document.getElementById(\"jade-text\")\nconst descriptor = document.getElementById(\"descriptor\")\nconst networkSelect = document.getElementById(\"network-select\")\n\n\nscanButton.disabled = false  // The button start disabled and it's enabled here once the wasm has been loaded\nscanButton.addEventListener(\"click\", scanButtonPressed)\n\njadeButton.disabled = false\njadeButton.addEventListener(\"click\", jadeButtonPressed)\n\n\nasync function scanButtonPressed(e) {\n    try {\n        balance.innerText = \"Loading... Open the browser dev tools to see network calls...\"\n        scanButton.disabled = true\n        let desc = descriptor.value\n\n        // This is hacky...\n        let network = desc.includes(\"xpub\") ? lwk_wasm__WEBPACK_IMPORTED_MODULE_0__.Network.mainnet() : lwk_wasm__WEBPACK_IMPORTED_MODULE_0__.Network.testnet()\n\n        let client = network.defaultEsploraClient()\n        let wolletDescriptor = new lwk_wasm__WEBPACK_IMPORTED_MODULE_0__.WolletDescriptor(desc)\n        let wollet = new lwk_wasm__WEBPACK_IMPORTED_MODULE_0__.Wollet(network, wolletDescriptor)\n        let update = await client.fullScan(wollet)\n        wollet.applyUpdate(update)\n        let val = wollet.balance()\n        let balanceString = JSON.stringify(Object.fromEntries(val), null, 1)\n            .replace(\"6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d\", \"L-BTC\")\n            .replace(\"144c654344aa716d6f3abcc1ca90e5641e4e2a7f633bc09fe3baf64585819a49\", \"tL-BTC\")\n        balance.innerText = balanceString\n    } catch (e) {\n        balance.innerText = e\n    } finally {\n        scanButton.disabled = false\n    }\n}\n\nasync function jadeButtonPressed(e) {\n    try {\n        let network = networkSelect.value == \"mainnet\" ? lwk_wasm__WEBPACK_IMPORTED_MODULE_0__.Network.mainnet() : lwk_wasm__WEBPACK_IMPORTED_MODULE_0__.Network.testnet()\n\n        let jade = await new lwk_wasm__WEBPACK_IMPORTED_MODULE_0__.Jade(network, true) // pass false if you don't see your DYI Jade\n        let xpub = await jade.getMasterXpub()\n        jadeText.innerText = xpub\n        jadeButton.disabled = true\n    } catch (e) {\n        jadeText.innerText = e\n    }\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "../pkg/lwk_wasm_bg.wasm":
/*!*******************************!*\
  !*** ../pkg/lwk_wasm_bg.wasm ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./lwk_wasm_bg.js */ \"../pkg/lwk_wasm_bg.js\");\nmodule.exports = __webpack_require__.v(exports, module.id, \"f387b2b5a5973a6b9e8c\", {\n\t\"./lwk_wasm_bg.js\": {\n\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\"__wbindgen_is_undefined\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_undefined,\n\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\"__wbindgen_string_get\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_get,\n\t\t\"__wbindgen_error_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_error_new,\n\t\t\"__wbg_wallettx_new\": WEBPACK_IMPORTED_MODULE_0.__wbg_wallettx_new,\n\t\t\"__wbindgen_number_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_number_new,\n\t\t\"__wbg_optionwallettxout_new\": WEBPACK_IMPORTED_MODULE_0.__wbg_optionwallettxout_new,\n\t\t\"__wbg_jade_new\": WEBPACK_IMPORTED_MODULE_0.__wbg_jade_new,\n\t\t\"__wbg_update_new\": WEBPACK_IMPORTED_MODULE_0.__wbg_update_new,\n\t\t\"__wbindgen_object_clone_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_clone_ref,\n\t\t\"__wbindgen_is_object\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_object,\n\t\t\"__wbindgen_bigint_from_i64\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_bigint_from_i64,\n\t\t\"__wbindgen_bigint_from_u64\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_bigint_from_u64,\n\t\t\"__wbg_set_f975102236d3c502\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_f975102236d3c502,\n\t\t\"__wbindgen_cb_drop\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_cb_drop,\n\t\t\"__wbg_fetch_27eb4c0a08a9ca04\": WEBPACK_IMPORTED_MODULE_0.__wbg_fetch_27eb4c0a08a9ca04,\n\t\t\"__wbg_queueMicrotask_3cbae2ec6b6cd3d6\": WEBPACK_IMPORTED_MODULE_0.__wbg_queueMicrotask_3cbae2ec6b6cd3d6,\n\t\t\"__wbindgen_is_function\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_function,\n\t\t\"__wbg_queueMicrotask_481971b0d87f3dd4\": WEBPACK_IMPORTED_MODULE_0.__wbg_queueMicrotask_481971b0d87f3dd4,\n\t\t\"__wbg_instanceof_Window_f401953a2cf86220\": WEBPACK_IMPORTED_MODULE_0.__wbg_instanceof_Window_f401953a2cf86220,\n\t\t\"__wbg_navigator_6c8fa55c5cc8796e\": WEBPACK_IMPORTED_MODULE_0.__wbg_navigator_6c8fa55c5cc8796e,\n\t\t\"__wbg_setTimeout_c172d5704ef82276\": WEBPACK_IMPORTED_MODULE_0.__wbg_setTimeout_c172d5704ef82276,\n\t\t\"__wbg_fetch_921fad6ef9e883dd\": WEBPACK_IMPORTED_MODULE_0.__wbg_fetch_921fad6ef9e883dd,\n\t\t\"__wbg_signal_a61f78a3478fd9bc\": WEBPACK_IMPORTED_MODULE_0.__wbg_signal_a61f78a3478fd9bc,\n\t\t\"__wbg_new_0d76b0581eca6298\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_0d76b0581eca6298,\n\t\t\"__wbg_abort_2aa7521d5690750e\": WEBPACK_IMPORTED_MODULE_0.__wbg_abort_2aa7521d5690750e,\n\t\t\"__wbg_newwithstrandinit_3fd6fba4083ff2d0\": WEBPACK_IMPORTED_MODULE_0.__wbg_newwithstrandinit_3fd6fba4083ff2d0,\n\t\t\"__wbg_instanceof_Response_849eb93e75734b6e\": WEBPACK_IMPORTED_MODULE_0.__wbg_instanceof_Response_849eb93e75734b6e,\n\t\t\"__wbg_url_5f6dc4009ac5f99d\": WEBPACK_IMPORTED_MODULE_0.__wbg_url_5f6dc4009ac5f99d,\n\t\t\"__wbg_status_61a01141acd3cf74\": WEBPACK_IMPORTED_MODULE_0.__wbg_status_61a01141acd3cf74,\n\t\t\"__wbg_headers_9620bfada380764a\": WEBPACK_IMPORTED_MODULE_0.__wbg_headers_9620bfada380764a,\n\t\t\"__wbg_arrayBuffer_29931d52c7206b02\": WEBPACK_IMPORTED_MODULE_0.__wbg_arrayBuffer_29931d52c7206b02,\n\t\t\"__wbg_text_450a059667fd91fd\": WEBPACK_IMPORTED_MODULE_0.__wbg_text_450a059667fd91fd,\n\t\t\"__wbg_new_ab6fd82b10560829\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_ab6fd82b10560829,\n\t\t\"__wbg_append_7bfcb4937d1d5e29\": WEBPACK_IMPORTED_MODULE_0.__wbg_append_7bfcb4937d1d5e29,\n\t\t\"__wbg_serial_0b3d5827cb31f45b\": WEBPACK_IMPORTED_MODULE_0.__wbg_serial_0b3d5827cb31f45b,\n\t\t\"__wbg_new_cc5fa4553e5314c2\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_cc5fa4553e5314c2,\n\t\t\"__wbg_read_e7d0f8a49be01d86\": WEBPACK_IMPORTED_MODULE_0.__wbg_read_e7d0f8a49be01d86,\n\t\t\"__wbg_requestPort_ef4d540696cd7d15\": WEBPACK_IMPORTED_MODULE_0.__wbg_requestPort_ef4d540696cd7d15,\n\t\t\"__wbg_requestPort_694281a2ba0420f2\": WEBPACK_IMPORTED_MODULE_0.__wbg_requestPort_694281a2ba0420f2,\n\t\t\"__wbg_instanceof_SerialPort_4711c26beb3ff36f\": WEBPACK_IMPORTED_MODULE_0.__wbg_instanceof_SerialPort_4711c26beb3ff36f,\n\t\t\"__wbg_readable_d450070144f41318\": WEBPACK_IMPORTED_MODULE_0.__wbg_readable_d450070144f41318,\n\t\t\"__wbg_writable_2ba18afbbb570240\": WEBPACK_IMPORTED_MODULE_0.__wbg_writable_2ba18afbbb570240,\n\t\t\"__wbg_open_0faccd6845713efc\": WEBPACK_IMPORTED_MODULE_0.__wbg_open_0faccd6845713efc,\n\t\t\"__wbg_getWriter_01ddb812f0418756\": WEBPACK_IMPORTED_MODULE_0.__wbg_getWriter_01ddb812f0418756,\n\t\t\"__wbg_write_0305cf168e5e805e\": WEBPACK_IMPORTED_MODULE_0.__wbg_write_0305cf168e5e805e,\n\t\t\"__wbg_crypto_d05b68a3572bb8ca\": WEBPACK_IMPORTED_MODULE_0.__wbg_crypto_d05b68a3572bb8ca,\n\t\t\"__wbg_process_b02b3570280d0366\": WEBPACK_IMPORTED_MODULE_0.__wbg_process_b02b3570280d0366,\n\t\t\"__wbg_versions_c1cb42213cedf0f5\": WEBPACK_IMPORTED_MODULE_0.__wbg_versions_c1cb42213cedf0f5,\n\t\t\"__wbg_node_43b1089f407e4ec2\": WEBPACK_IMPORTED_MODULE_0.__wbg_node_43b1089f407e4ec2,\n\t\t\"__wbindgen_is_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_string,\n\t\t\"__wbg_require_9a7e0f667ead4995\": WEBPACK_IMPORTED_MODULE_0.__wbg_require_9a7e0f667ead4995,\n\t\t\"__wbg_msCrypto_10fc94afee92bd76\": WEBPACK_IMPORTED_MODULE_0.__wbg_msCrypto_10fc94afee92bd76,\n\t\t\"__wbg_randomFillSync_b70ccbdf4926a99d\": WEBPACK_IMPORTED_MODULE_0.__wbg_randomFillSync_b70ccbdf4926a99d,\n\t\t\"__wbg_getRandomValues_7e42b4fb8779dc6d\": WEBPACK_IMPORTED_MODULE_0.__wbg_getRandomValues_7e42b4fb8779dc6d,\n\t\t\"__wbg_new_16b304a2cfa7ff4a\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_16b304a2cfa7ff4a,\n\t\t\"__wbg_newnoargs_e258087cd0daa0ea\": WEBPACK_IMPORTED_MODULE_0.__wbg_newnoargs_e258087cd0daa0ea,\n\t\t\"__wbg_new_d9bc3a0147634640\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_d9bc3a0147634640,\n\t\t\"__wbg_next_40fc327bfc8770e6\": WEBPACK_IMPORTED_MODULE_0.__wbg_next_40fc327bfc8770e6,\n\t\t\"__wbg_value_d93c65011f51a456\": WEBPACK_IMPORTED_MODULE_0.__wbg_value_d93c65011f51a456,\n\t\t\"__wbg_iterator_2cee6dadfd956dfa\": WEBPACK_IMPORTED_MODULE_0.__wbg_iterator_2cee6dadfd956dfa,\n\t\t\"__wbg_new_72fb9a18b5ae2624\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_72fb9a18b5ae2624,\n\t\t\"__wbg_self_ce0dbfc45cf2f5be\": WEBPACK_IMPORTED_MODULE_0.__wbg_self_ce0dbfc45cf2f5be,\n\t\t\"__wbg_window_c6fb939a7f436783\": WEBPACK_IMPORTED_MODULE_0.__wbg_window_c6fb939a7f436783,\n\t\t\"__wbg_globalThis_d1e6af4856ba331b\": WEBPACK_IMPORTED_MODULE_0.__wbg_globalThis_d1e6af4856ba331b,\n\t\t\"__wbg_global_207b558942527489\": WEBPACK_IMPORTED_MODULE_0.__wbg_global_207b558942527489,\n\t\t\"__wbg_set_d4638f722068f043\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_d4638f722068f043,\n\t\t\"__wbg_call_27c0f87801dedf93\": WEBPACK_IMPORTED_MODULE_0.__wbg_call_27c0f87801dedf93,\n\t\t\"__wbg_call_b3ca7c6051f9bec1\": WEBPACK_IMPORTED_MODULE_0.__wbg_call_b3ca7c6051f9bec1,\n\t\t\"__wbg_set_8417257aaedc936b\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_8417257aaedc936b,\n\t\t\"__wbg_next_196c84450b364254\": WEBPACK_IMPORTED_MODULE_0.__wbg_next_196c84450b364254,\n\t\t\"__wbg_done_298b57d23c0fc80c\": WEBPACK_IMPORTED_MODULE_0.__wbg_done_298b57d23c0fc80c,\n\t\t\"__wbg_now_3014639a94423537\": WEBPACK_IMPORTED_MODULE_0.__wbg_now_3014639a94423537,\n\t\t\"__wbg_new_81740750da40724f\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_81740750da40724f,\n\t\t\"__wbg_resolve_b0083a7967828ec8\": WEBPACK_IMPORTED_MODULE_0.__wbg_resolve_b0083a7967828ec8,\n\t\t\"__wbg_then_0c86a60e8fcfe9f6\": WEBPACK_IMPORTED_MODULE_0.__wbg_then_0c86a60e8fcfe9f6,\n\t\t\"__wbg_then_a73caa9a87991566\": WEBPACK_IMPORTED_MODULE_0.__wbg_then_a73caa9a87991566,\n\t\t\"__wbg_buffer_12d079cc21e14bdb\": WEBPACK_IMPORTED_MODULE_0.__wbg_buffer_12d079cc21e14bdb,\n\t\t\"__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb\": WEBPACK_IMPORTED_MODULE_0.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb,\n\t\t\"__wbg_new_63b92bc8671ed464\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_63b92bc8671ed464,\n\t\t\"__wbg_newwithlength_e9b4878cebadb3d3\": WEBPACK_IMPORTED_MODULE_0.__wbg_newwithlength_e9b4878cebadb3d3,\n\t\t\"__wbg_subarray_a1f73cd4b5b42fe1\": WEBPACK_IMPORTED_MODULE_0.__wbg_subarray_a1f73cd4b5b42fe1,\n\t\t\"__wbg_length_c20a40f15020d68a\": WEBPACK_IMPORTED_MODULE_0.__wbg_length_c20a40f15020d68a,\n\t\t\"__wbg_set_a47bac70306a19a7\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_a47bac70306a19a7,\n\t\t\"__wbg_get_e3c254076557e348\": WEBPACK_IMPORTED_MODULE_0.__wbg_get_e3c254076557e348,\n\t\t\"__wbg_has_0af94d20077affa2\": WEBPACK_IMPORTED_MODULE_0.__wbg_has_0af94d20077affa2,\n\t\t\"__wbg_set_1f9b04f170055d33\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_1f9b04f170055d33,\n\t\t\"__wbg_stringify_8887fe74e1c50d81\": WEBPACK_IMPORTED_MODULE_0.__wbg_stringify_8887fe74e1c50d81,\n\t\t\"__wbindgen_debug_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_debug_string,\n\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\"__wbindgen_memory\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_memory,\n\t\t\"__wbindgen_closure_wrapper6285\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_closure_wrapper6285\n\t}\n});\n\n//# sourceURL=webpack:///../pkg/lwk_wasm_bg.wasm?");

/***/ })

}]);